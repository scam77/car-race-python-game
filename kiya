import pygame
import random

# Initialize Pygame
pygame.init()

# Screen dimensions
WIDTH = 800
HEIGHT = 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Car Game")

# Colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)

# Car settings
car_width = 50
car_height = 100
car_x = WIDTH // 2 - car_width // 2
car_y = HEIGHT - car_height - 10
car_speed = 5

# Obstacle settings
obstacle_width = 50
obstacle_height = 100
obstacle_speed = 5
obstacle_gap = 300  # Distance between obstacles

# Game clock
clock = pygame.time.Clock()

# Fonts
font = pygame.font.SysFont(None, 35)

def draw_car(x, y):
    pygame.draw.rect(screen, RED, (x, y, car_width, car_height))

def draw_obstacle(x, y):
    pygame.draw.rect(screen, BLACK, (x, y, obstacle_width, obstacle_height))

def game_loop():
    global car_x
    game_over = False
    score = 0

    # Obstacles
    obstacles = []
    obstacle_y = -obstacle_height
    obstacle_x = random.randint(100, WIDTH - 100)
    
    while not game_over:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True

        # Control the car
        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT] and car_x > 0:
            car_x -= car_speed
        if keys[pygame.K_RIGHT] and car_x < WIDTH - car_width:
            car_x += car_speed

        # Move obstacles
        obstacle_y += obstacle_speed
        if obstacle_y > HEIGHT:
            obstacle_y = -obstacle_height
            obstacle_x = random.randint(100, WIDTH - 100)
            score += 1  # Increase score for avoiding the obstacle

        # Collision detection
        if car_y < obstacle_y + obstacle_height and car_y + car_height > obstacle_y:
            if car_x < obstacle_x + obstacle_width and car_x + car_width > obstacle_x:
                game_over = True  # End the game on collision

        # Drawing everything
        screen.fill(WHITE)
        draw_car(car_x, car_y)
        draw_obstacle(obstacle_x, obstacle_y)

        # Display score
        score_text = font.render("Score: " + str(score), True, (0, 0, 0))
        screen.blit(score_text, (10, 10))

        pygame.display.update()
        clock.tick(60)  # Frame rate

    # Game Over
    game_over_text = font.render("Game Over! Score: " + str(score), True, (255, 0, 0))
    screen.fill(WHITE)
    screen.blit(game_over_text, (WIDTH // 2 - 100, HEIGHT // 2))
    pygame.display.update()
    pygame.time.wait(2000)  # Wait for 2 seconds before closing

    pygame.quit()

# Start the game
game_loop()
